using System;

namespace shuffle2
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] array = new int[] { 1, 2, 3, 4, 5 };
            int[] mixedArray = new int[0];
            int arrayLength = array.Length;

            PrintArray(array);

            array = MixArray(array, mixedArray, arrayLength);

            PrintArray(array);
        }

        static void PrintArray(int[] array)
        {
            for (int i = 0; i < array.Length; i++)
            {
                Console.Write(array[i] + " ");
            }

            Console.WriteLine();
        }

        static int[] MixArray(int[] array, int[] mixedArray, int arrayLength)
        {
            int addingIndex = 0;

            while(mixedArray.Length != arrayLength)
            {
                mixedArray = EnlargeArray(mixedArray);

                int randomIndex = GetRandomIndex(array);

                int valueByRandomIndex = GetValueByRandomIndex(array, randomIndex);

                array = DecreaseArray(array, randomIndex);

                mixedArray = FillNewArray(mixedArray, valueByRandomIndex, addingIndex);

                addingIndex++;
            }

            return mixedArray;
        }

        static int GetRandomIndex(int[] array)
        {
            Random random = new Random();

            int randomIndex;
            randomIndex = random.Next(0, array.Length);
            return randomIndex;
        }

        static int[] DecreaseArray(int[] array, int randomIndex)
        {
            int[] decreasedArray = new int[array.Length - 1];

            for (int i = 0; i < randomIndex; i++)
            {
                decreasedArray[i] = array[i];
            }

            for (int i = randomIndex + 1; i < array.Length; i++)
            {
                decreasedArray[i - 1] = array[i];
            }

            return decreasedArray;
        }

        static int GetValueByRandomIndex(int[] array, int randomIndex)
        {
            int valueByRandomIndex = array[randomIndex];
            return valueByRandomIndex;
        }

        static int[] EnlargeArray(int[] mixedArray)
        {
            int[] enlargedArray = new int[mixedArray.Length + 1];

            for (int i = 0; i < mixedArray.Length; i++)
            {
                enlargedArray[i] = mixedArray[i];
            }

            return enlargedArray;
        }

        static int[] FillNewArray(int[] mixedArray, int valueByRandomIndex, int addingIndex)
        {
            mixedArray[addingIndex] = valueByRandomIndex;
            return mixedArray;
        }
    }
}
